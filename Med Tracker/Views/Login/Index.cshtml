@model Med_Tracker.Models.Patient

@{
    ViewBag.Title = "Patient Login";
}

<div class="row col-md-12">
    @* Login Form *@
    <div class="col-md-6">
        <div class="card">
            <div class="card-body">
                <h3 class="card-title text-primary">Login</h3>
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">

                        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.PatientId)
                        @Html.HiddenFor(model => model.FirstName)
                        @Html.HiddenFor(model => model.LastName)
                        @Html.HiddenFor(model => model.Email)
                        @Html.HiddenFor(model => model.RegToken)
                        @Html.HiddenFor(model => model.Confirmed)
                        <div class="form-group">
                            @Html.DisplayName("NHS Number")
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.NHSNumber, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.NHSNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.DisplayName("Password")
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.PasswordHash, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PasswordHash, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Login" class="btn btn-primary text-white w-100 my-4" />
                            </div>
                        </div>
                    </div>

                }
            </div>
        </div>
        
        

    </div>
    @* End of login *@
    @* Registration form *@
<div class="col-md-6">
    <div class="card">
        <div class="card-body">
            <h3 class="text-primary">Register</h3>
            @*@Html.ActionLink("Register", "Register", "Patient")*@

            @{
                ViewBag.Btn = Model != null ? "Save" : "Register";
                //ViewBag.emailState = Model != null ? "disabled" : "enabled";



            }


            @using (Html.BeginForm("Register", "Patient", FormMethod.Post))
            {


                @Html.AntiForgeryToken()

                <div class="form-horizontal">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.NHSNumber)
                    @Html.HiddenFor(model => model.Confirmed)
                    @Html.HiddenFor(model => model.RegToken)

                    <div class="form-group">
                        @Html.DisplayName("First Name")
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.DisplayName("Last Name")
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.DisplayName("Password")
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.PasswordHash, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PasswordHash, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Re_PasswordHash, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Re_PasswordHash, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Re_PasswordHash, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">

                            <input type="submit" value="Register" class="btn btn-success w-100 text-white my-4" />

                            @*@Html.ActionLink("Sign Up", "Register", "Patient", new { area = "" }, new { patient = pat })*@
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>    
    
</div>
    @* End of reg form *@
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
