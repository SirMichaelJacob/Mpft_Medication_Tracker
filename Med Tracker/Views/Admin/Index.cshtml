@model Med_Tracker.Models.Provider

@{
    ViewBag.Title = "Index";
}

<h2 class="my-4">Healthcare Provider Portal</h2>
<div class="row col-md-12">
    @* Login Form *@
    <div class="col-md-6">
        <h2 class="text-success fw-light">Login</h2>
        <hr />
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.ProviderId)
                @Html.HiddenFor(model => model.Name)
                @Html.HiddenFor(model => model.PhoneNumber)
                @Html.HiddenFor(model => model.Re_PasswordHash)
                @Html.HiddenFor(model => model.RegToken)
                @Html.HiddenFor(model => model.Confirmed)
                <div class="form-group">
                    @Html.DisplayName("Email")
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.DisplayName("Password")
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PasswordHash, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PasswordHash, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Login" class="btn btn-primary text-white w-100 my-4" />
                    </div>
                </div>
            </div>










        }

    </div>
    @* End of login *@
    @* Registration form *@
    <div class="col-md-6">
        <h3 class="text-success fw-light">Create new Account</h3>
        <hr />
        @*@Html.ActionLink("Register", "Register", "Patient")*@

        @{
            ViewBag.Btn = Model != null ? "Save" : "Register";
            //ViewBag.emailState = Model != null ? "disabled" : "enabled";



        }


        @using (Html.BeginForm("Register", "Provider", FormMethod.Post))
        {


            @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.Confirmed)
        @Html.HiddenFor(model => model.RegToken)

        <div class="form-group">
            @Html.DisplayName("Full Name")
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.DisplayName("Phone")
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.DisplayName("Password")
            <div class="col-md-10">
                @Html.EditorFor(model => model.PasswordHash, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PasswordHash, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Re_PasswordHash, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Re_PasswordHash, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Re_PasswordHash, "", new { @class = "text-danger" })
            </div>
        </div>





        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">

                <input type="submit" value="Create Account" class="btn btn-success w-100 text-white my-4" />

                @*@Html.ActionLink("Sign Up", "Register", "Patient", new { area = "" }, new { patient = pat })*@
            </div>
        </div>
    </div>
        }
    </div>
    @* End of reg form *@
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
